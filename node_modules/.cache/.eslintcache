[{"/Users/edgardyr/Documents/Professional/react_frontend_sample/src/index.js":"1","/Users/edgardyr/Documents/Professional/react_frontend_sample/src/App.js":"2","/Users/edgardyr/Documents/Professional/react_frontend_sample/src/data.js":"3","/Users/edgardyr/Documents/Professional/react_frontend_sample/src/AuthorPage.js":"4"},{"size":449,"mtime":1635347240085,"results":"5","hashOfConfig":"6"},{"size":2950,"mtime":1635348249368,"results":"7","hashOfConfig":"6"},{"size":3603,"mtime":1635348142507,"results":"8","hashOfConfig":"6"},{"size":514,"mtime":1635346699541,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"8dgkb4",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"12"},"/Users/edgardyr/Documents/Professional/react_frontend_sample/src/index.js",[],["21","22"],"/Users/edgardyr/Documents/Professional/react_frontend_sample/src/App.js",["23","24","25","26","27","28","29","30"],"import React from 'react';\nimport logo from './levvel-logo.svg';\nimport './App.css';\nimport resources from './data.js';\nimport { Route, IndexRoute } from 'react-router';\nimport { BrowserRouter as Router, Link, Switch } from 'react-router-dom'; \nimport AuthorPage from './AuthorPage.js';\nimport { NavItem } from 'shards-react';\n\nconst {author1, author2, author3, author4} = resources;\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            lol\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nclass Display extends React.Component { \n   constructor(props) {\n       super(props);\n  \n       this.state = {\n           items: [],\n           DataisLoaded: false\n       };\n   }\n  \n   async componentDidMount() {\n     \n        if (this.props.name===\"Jessica\"){\n          var authorInfo= author1;\n        }\n        else if (this.props.name===\"Alejandro\"){\n          var authorInfo=author2;\n        }\n        else if (this.props.name===\"Eric\"){\n          var authorInfo=author3;\n        }\n        else{\n          var authorInfo=author4;\n        }\n\n        await fetch(\"https://jsonplaceholder.typicode.com/users\", {method: 'POST', body:authorInfo, headers: {'Content-type': 'application/json; charset=UTF-8'}})\n          .then((res) => res.json())\n          .then((json) => {\n            this.setState({\n              items: [json],\n              DataisLoaded: true\n          })\n       })\n   }\n   render() {\n       const { DataisLoaded, items } = this.state;\n  \n       return (\n          <Router>\n            <div className = \"App\">\n              <header className = \"Author\">\n                  {items.map((item) => (\n                    <React.Fragment id = {item.id}>\n                      <img src = {item.imgs[0]} />\n                      <p>\n                        <nav><Link to ={'/'+item.name}>{item.name}</Link></nav>\n                        <br/>\n                        <article id=\"title\">\n                          {item.posts[0]}\n                          <h6>\n                          {item.desc[0]}\n                          </h6>\n                        </article>\n                      </p>\n                      <br/>\n                      <Switch>\n                        <Route path={'/'+item.name}>\n                          <h2 id ='other'> Other posts by {item.name}</h2>\n                          <AuthorPage posts = {item.posts.splice(1, 2)} />\n                        </Route>\n                      </Switch>\n                    </React.Fragment>\n                  ))}\n              </header>\n            </div>\n          </Router>\n   );\n}\n}\n\nexport default Display;","/Users/edgardyr/Documents/Professional/react_frontend_sample/src/data.js",[],"/Users/edgardyr/Documents/Professional/react_frontend_sample/src/AuthorPage.js",["31"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport {Container, Row} from \"shards-react\";\n\nconst AuthorPage = (props) => {\n    var posts = props.posts;\n    const postList = posts.map((post)=>{\n        return(\n            <div>\n            <Container className = \"post\">\n                <h1 className=\"title\">{post}</h1>\n            </Container>\n            <Row className=\"separator\"> </Row>\n            </div>\n        )\n    })\n    return(postList)\n}\n export default AuthorPage;",{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":5,"column":17,"nodeType":"38","messageId":"39","endLine":5,"endColumn":27},{"ruleId":"36","severity":1,"message":"40","line":8,"column":10,"nodeType":"38","messageId":"39","endLine":8,"endColumn":17},{"ruleId":"36","severity":1,"message":"41","line":12,"column":7,"nodeType":"38","messageId":"39","endLine":12,"endColumn":10},{"ruleId":"42","severity":1,"message":"43","line":51,"column":15,"nodeType":"38","messageId":"44","endLine":51,"endColumn":25},{"ruleId":"42","severity":1,"message":"43","line":54,"column":15,"nodeType":"38","messageId":"44","endLine":54,"endColumn":25},{"ruleId":"42","severity":1,"message":"43","line":57,"column":15,"nodeType":"38","messageId":"44","endLine":57,"endColumn":25},{"ruleId":"36","severity":1,"message":"45","line":70,"column":16,"nodeType":"38","messageId":"39","endLine":70,"endColumn":28},{"ruleId":"46","severity":1,"message":"47","line":78,"column":23,"nodeType":"48","endLine":78,"endColumn":51},{"ruleId":"36","severity":1,"message":"49","line":2,"column":8,"nodeType":"38","messageId":"39","endLine":2,"endColumn":16},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'IndexRoute' is defined but never used.","Identifier","unusedVar","'NavItem' is defined but never used.","'App' is defined but never used.","no-redeclare","'authorInfo' is already defined.","redeclared","'DataisLoaded' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]