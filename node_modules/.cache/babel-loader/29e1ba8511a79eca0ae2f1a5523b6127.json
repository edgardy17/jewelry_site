{"ast":null,"code":"var _jsxFileName = \"/Users/edgardyr/Documents/Professional/react_frontend_sample/src/App.js\";\nimport React from 'react';\nimport logo from \"./levvel-logo.svg\";\nimport './App.css';\nimport resources from './data.js';\nimport { Route, IndexRoute } from 'react-router';\nimport { BrowserRouter as Router, Link, Switch } from 'react-router-dom';\nimport AuthorPage from './AuthorPage.js';\nimport { NavItem } from 'shards-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  author1,\n  author2,\n  author3,\n  author4\n} = resources;\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"lol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"App-link\",\n          href: \"https://reactjs.org\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Learn React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      DataisLoaded: false\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.name === \"Jessica\") {\n      var authorInfo = author1;\n    } else if (this.props.name === \"Alejandro\") {\n      var authorInfo = author2;\n    } else if (this.props.name === \"Eric\") {\n      var authorInfo = author3;\n    } else {\n      var authorInfo = author4;\n    }\n\n    await fetch(\"https://jsonplaceholder.typicode.com/users\", {\n      method: 'POST',\n      body: authorInfo,\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        items: [json],\n        DataisLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      items\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"Author\",\n          children: items.map(item => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            id: item.id,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.imgs[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: '/' + item.name,\n                  children: item.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n                id: \"title\",\n                children: [item.posts[0], /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: item.desc[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                path: '/' + item.name,\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  id: \"other\",\n                  children: [\" Other posts by \", item.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(AuthorPage, {\n                  posts: item.posts.splice(1, 2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/Users/edgardyr/Documents/Professional/react_frontend_sample/src/App.js"],"names":["React","resources","Route","IndexRoute","BrowserRouter","Router","Link","Switch","AuthorPage","NavItem","author1","author2","author3","author4","App","Component","render","logo","Display","constructor","props","state","items","DataisLoaded","componentDidMount","name","authorInfo","fetch","method","body","headers","then","res","json","setState","map","item","id","imgs","posts","desc","splice"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './levvel-logo.svg';\nimport './App.css';\nimport resources from './data.js';\nimport { Route, IndexRoute } from 'react-router';\nimport { BrowserRouter as Router, Link, Switch } from 'react-router-dom'; \nimport AuthorPage from './AuthorPage.js';\nimport { NavItem } from 'shards-react';\n\nconst {author1, author2, author3, author4} = resources;\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            lol\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nclass Display extends React.Component { \n   constructor(props) {\n       super(props);\n  \n       this.state = {\n           items: [],\n           DataisLoaded: false\n       };\n   }\n  \n   async componentDidMount() {\n     \n        if (this.props.name===\"Jessica\"){\n          var authorInfo= author1;\n        }\n        else if (this.props.name===\"Alejandro\"){\n          var authorInfo=author2;\n        }\n        else if (this.props.name===\"Eric\"){\n          var authorInfo=author3;\n        }\n        else{\n          var authorInfo=author4;\n        }\n\n        await fetch(\"https://jsonplaceholder.typicode.com/users\", {method: 'POST', body:authorInfo, headers: {'Content-type': 'application/json; charset=UTF-8'}})\n          .then((res) => res.json())\n          .then((json) => {\n            this.setState({\n              items: [json],\n              DataisLoaded: true\n          })\n       })\n   }\n   render() {\n       const { DataisLoaded, items } = this.state;\n  \n       return (\n          <Router>\n            <div className = \"App\">\n              <header className = \"Author\">\n                  {items.map((item) => (\n                    <React.Fragment id = {item.id}>\n                      <img src = {item.imgs[0]} />\n                      <p>\n                        <nav><Link to ={'/'+item.name}>{item.name}</Link></nav>\n                        <br/>\n                        <article id=\"title\">\n                          {item.posts[0]}\n                          <h6>\n                          {item.desc[0]}\n                          </h6>\n                        </article>\n                      </p>\n                      <br/>\n                      <Switch>\n                        <Route path={'/'+item.name}>\n                          <h2 id ='other'> Other posts by {item.name}</h2>\n                          <AuthorPage posts = {item.posts.splice(1, 2)} />\n                        </Route>\n                      </Switch>\n                    </React.Fragment>\n                  ))}\n              </header>\n            </div>\n          </Router>\n   );\n}\n}\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}