{"ast":null,"code":"var _jsxFileName = \"/Users/edgardyr/Documents/Professional/react_frontend_sample/src/App.js\";\nimport React from 'react';\nimport logo from \"./levvel-logo.svg\";\nimport './App.css'; // const author1 = JSON.stringify(\n//   {\n//     \"userId\":1,\n//     \"title\":\"hello word\"\n//   }\n// );\n// const getData = async () => {\n//   try{\n//     const response = await fetch('https://jsonplaceholder.typicode.com/posts', {method: 'PATCH', body:author1,\n//   headers:{'Content-type': 'application/json; charset=UTF-8'}});\n//     if(response.ok){\n//       const jsonResponse = await response.json();\n//       console.log(jsonResponse);\n//     }\n//     throw new Error('Request failed!');\n//   }\n//   catch(error){\n//     console.log(error);\n//   }\n// }\n// getData();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"lol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"App-link\",\n          href: \"https://reactjs.org\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Learn React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      DataisLoaded: false\n    };\n  } // ComponentDidMount is used to\n  // execute the code \n\n\n  componentDidMount() {\n    var data = {};\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(json => {\n      data = json;\n    });\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(res => res.json()).then(json => {\n      const result = {};\n      Object.assign(result, data, json);\n      this.setState({\n        items: result,\n        DataisLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      items\n    } = this.state; // const merged = [];\n    // merged.push(result);\n    // items.map((item) => ( \n    //   //  <ol key = { item.id } >\n    //   //     { item.userId }\n    //   //     { item.name}\n    //   //     <br/>\n    //   //     { item.title }\n    //   //  </ol>\n    //  ))\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top posts by author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 12\n      }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: item.title\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/Users/edgardyr/Documents/Professional/react_frontend_sample/src/App.js"],"names":["React","App","Component","render","logo","Display","constructor","props","state","items","DataisLoaded","componentDidMount","data","fetch","then","res","json","result","Object","assign","setState","map","item","title","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,GAAN,SAAkBD,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,SAAS,EAAC,UAA1B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAKE;AACE,UAAA,SAAS,EAAC,UADZ;AAEE,UAAA,IAAI,EAAC,qBAFP;AAGE,UAAA,MAAM,EAAC,QAHT;AAIE,UAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AApB+B;;AAuBlC,MAAMC,OAAN,SAAsBL,KAAK,CAACE,SAA5B,CAAsC;AACnCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH,GARkC,CAUnC;AACA;;;AACAC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,IAAI,GAAG,EAAX;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWE,IAAD,IAAU;AACZJ,MAAAA,IAAI,GAAGI,IAAP;AACH,KAJL;AAKAH,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADnB,EAEKF,IAFL,CAEWE,IAAD,IAAU;AACb,YAAMC,MAAM,GAAG,EAAf;AACAC,MAAAA,MAAM,CAACC,MAAP,CAAcF,MAAd,EAAsBL,IAAtB,EAA4BI,IAA5B;AACA,WAAKI,QAAL,CAAc;AACVX,QAAAA,KAAK,EAAEQ,MADG;AAEVP,QAAAA,YAAY,EAAE;AAFJ,OAAd;AAIF,KATL;AAUH;;AACDP,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEO,MAAAA,YAAF;AAAgBD,MAAAA;AAAhB,QAA0B,KAAKD,KAArC,CADK,CAGN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE;;AAED,wBACA;AAAK,MAAA,SAAS,EAAG,KAAjB;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEMC,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT;AAAA,kBACGA,IAAI,CAACC;AADR,SAAWD,IAAI,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,cADD,CAFN;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAWN;;AAvDqC;;AA0DtC,eAAenB,OAAf","sourcesContent":["import React from 'react';\nimport logo from './levvel-logo.svg';\nimport './App.css';\n\n// const author1 = JSON.stringify(\n//   {\n//     \"userId\":1,\n//     \"title\":\"hello word\"\n//   }\n// );\n\n\n// const getData = async () => {\n//   try{\n//     const response = await fetch('https://jsonplaceholder.typicode.com/posts', {method: 'PATCH', body:author1,\n//   headers:{'Content-type': 'application/json; charset=UTF-8'}});\n//     if(response.ok){\n//       const jsonResponse = await response.json();\n//       console.log(jsonResponse);\n//     }\n//     throw new Error('Request failed!');\n//   }\n//   catch(error){\n//     console.log(error);\n//   }\n// }\n// getData();\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            lol\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nclass Display extends React.Component { \n   constructor(props) {\n       super(props);\n  \n       this.state = {\n           items: [],\n           DataisLoaded: false\n       };\n   }\n  \n   // ComponentDidMount is used to\n   // execute the code \n   componentDidMount() {\n       var data = {};\n       fetch(\"https://jsonplaceholder.typicode.com/posts\")\n           .then((res) => res.json())\n           .then((json) => {\n               data = json;\n           })\n       fetch(\"https://jsonplaceholder.typicode.com/users\")\n           .then((res) => res.json())\n           .then((json) => {\n              const result = {}\n              Object.assign(result, data, json)\n              this.setState({\n                  items: result,\n                  DataisLoaded: true\n              });\n           })\n   }\n   render() {\n       const { DataisLoaded, items } = this.state;\n\n      // const merged = [];\n      // merged.push(result);\n      // items.map((item) => ( \n      //   //  <ol key = { item.id } >\n      //   //     { item.userId }\n      //   //     { item.name}\n      //   //     <br/>\n      //   //     { item.title }\n      //   //  </ol>\n        //  ))\n  \n       return (\n       <div className = \"App\">\n           <h1>Top posts by author</h1> \n            {items.map((item) => (\n              <ol key = {item.id} >\n                {item.title}\n              </ol>\n            ))}\n\n       </div>\n   );\n}\n}\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}