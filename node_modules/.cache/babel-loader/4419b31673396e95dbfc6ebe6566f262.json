{"ast":null,"code":"var _jsxFileName = \"/Users/edgardyr/Documents/Professional/react_frontend_sample/src/App.js\";\nimport React from 'react';\nimport logo from \"./levvel-logo.svg\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst author1 = JSON.stringify({\n  \"name\": \"Jessica Voss\",\n  \"posts\": [\"My trip to Las Vegas\", \"Sometime it's all about food and wine! Four days between Cape Town and Franschoek\", \"Nightmare in Madrid\"]\n});\n\nconst getData = async () => {\n  try {\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n      methods: 'POST',\n      body: author1\n    });\n\n    if (response.ok) {\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    }\n\n    throw new Error('Request failed!');\n  } catch (error) {\n    console.log(error);\n  }\n};\n\ngetData();\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"lol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"App-link\",\n          href: \"https://reactjs.org\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Learn React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      DataisLoaded: false\n    };\n  } // ComponentDidMount is used to\n  // execute the code \n\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(json => {\n      this.setState({\n        items: json,\n        DataisLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      DataisLoaded,\n      items\n    } = this.state;\n    if (!DataisLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Pleses wait some time.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 34\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Top posts by author\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 12\n      }, this), \"  \", items.map(item => /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [item.userId, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this), item.title]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/Users/edgardyr/Documents/Professional/react_frontend_sample/src/App.js"],"names":["React","author1","JSON","stringify","getData","response","fetch","methods","body","ok","jsonResponse","json","Error","error","console","log","App","Component","render","logo","Display","constructor","props","state","items","DataisLoaded","componentDidMount","then","res","setState","map","item","userId","title","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './levvel-logo.svg';\nimport './App.css';\n\nconst author1 = JSON.stringify(\n  {\n    \"name\": \"Jessica Voss\",\n    \"posts\": [\"My trip to Las Vegas\", \"Sometime it's all about food and wine! Four days between Cape Town and Franschoek\", \"Nightmare in Madrid\"]\n  }\n)\n\n\nconst getData = async () => {\n  try{\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {methods: 'POST', body:author1});\n    if(response.ok){\n      const jsonResponse = await response.json();\n      return jsonResponse;\n    }\n    throw new Error('Request failed!');\n  }\n  catch(error){\n    console.log(error);\n  }\n}\ngetData();\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            lol\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\">\n\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nclass Display extends React.Component { \n   constructor(props) {\n       super(props);\n  \n       this.state = {\n           items: [],\n           DataisLoaded: false\n       };\n   }\n  \n   // ComponentDidMount is used to\n   // execute the code \n   componentDidMount() {\n       fetch(\"https://jsonplaceholder.typicode.com/posts\")\n           .then((res) => res.json())\n           .then((json) => {\n               this.setState({\n                   items: json,\n                   DataisLoaded: true\n               });\n           })\n   }\n   render() {\n       const { DataisLoaded, items } = this.state;\n       if (!DataisLoaded) return <div>\n           <h1> Pleses wait some time.... </h1></div> ;\n  \n       return (\n       <div className = \"App\">\n           <h1>Top posts by author</h1>  {\n               items.map((item) => ( \n               <ol key = { item.id } >\n                  { item.userId }\n                  <br/>\n                  { item.title }\n               </ol>\n               ))\n           }\n       </div>\n   );\n}\n}\n\nexport default Display;"]},"metadata":{},"sourceType":"module"}